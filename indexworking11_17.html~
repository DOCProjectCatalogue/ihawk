 <!DOCTYPE html>
<html>
<body>

<h1>iHawk <bp>
Pump Control 0.3</h1>

<head>
<script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
<script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>

<meta content="text/html;charset=utf-8" http-equiv="Content-Type">
<meta content="utf-8" http-equiv="encoding">
<meta name="viewport" content="width=device-width, initial-scale=1"> 


<link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css" 
<script type="text/javascript" src="jquery.dynatable.js"></script>


<style type="text/css">
.tftable {font-size:12px;color:#333333;width:98%;border-width: 1px;border-color: #729ea5;border-collapse: collapse;}
.tftable th {width:33%;align:center;font-size:14px;background-color:#acc8cc;border-width: 1px;padding: 2px;border-style: solid;border-color: #729ea5;text-align:center;}
.tftable tr {background-color:#d4e3e5;}
.tftable td {text-align:center;font-size:14px;border-width: 1px;padding: 2px;border-style: solid;border-color: #729ea5;}
.tftable tr:hover {background-color:#ffffff;}

.tftable2 {font-size:12px;color:#333333;width:96%;border-width: 1px;border-color: #729ea5;border-collapse: collapse;}
.tftable2 th {width:25%;align:center;font-size:14px;background-color:#acc8cc;border-width: 1px;padding: 2px;border-style: solid;border-color: #729ea5;text-align:center;}
.tftable2 tr {background-color:#d4e3e5;}
.tftable2 td {text-align:center;font-size:14px;border-width: 1px;padding: 2px;border-style: solid;border-color: #729ea5;}
.tftable2 tr:hover {background-color:#ffffff;} 
h1 {text-align:center;font-size:16x;}

 
h1 {text-align:center;font-size:16x;}


</style>


</head>




<script type="text/javascript">



function iob(hisdata,setdata,ptime)
{
	


	//var ptime = " ";
	n=Object.keys(hisdata).length; //find number of entries in the history grab, need to ensure bash script grabs enough
	var pt=Date(ptime);
	var ptimem=Date.parse(pt); //this is alreadt converted to local time unlike itimem need to investigate why	
	 itimem=setdata.insulin_action_type*3600000.0;//convert insulin duration to millsec
	//console.log(setdata.insulin_action_type);
	 total=0.0;	
	inonb=0.0;

	for (i = 0; i < n; i++) {
	var btimem=Date.parse(hisdata[i].timestamp)+5*3600000.0; //this method converts to GMT, so add 5 hrs in millisec
	//var btimem=Date.parse(bt);
	//var btimem=(new Date(Date.parse(hisdata[i].timestamp))).getTime();
	console.log(n,ptimem-btimem,ptimem,itimem,hisdata[i].timestamp,btimem,hisdata[i]._type,hisdata[i].amount);
	//if within active insulin window and the record is a bolus then add it in 
	if ((ptimem-btimem)<itimem && (hisdata[i]._type=="Bolus")) {
	//work off bolus as bolus wizard is not called during manual bolus events and we want those too.
//	console.log(i);
//	console.log(hisdata[i]._type);
//	console.log(hisdata[i].amount);
	m=(1.66667e-5*(ptimem-btimem)); //convert current record active time to minutes m from millisec
	console.log("min after bolus");
	console.log(m);
	var actin=[0.0,0.0,0.0,0.0,0.0,0.0,0.0];
	//common  % remaining insulin vs time curves from literature walsh et al, very close to minimed
	//at time 0 actin=100, minimed actin=0 for first 30 min, walsh uses about 1-5% depending on curve - more then close enough
	actin[3]=-3.2e-7*Math.pow(m,4)+1.354e-4*Math.pow(m,3)-1.76e-2*Math.pow(m,2)+9.255e-2*m+99.951;
	actin[4]=-3.31e-8*Math.pow(m,4)+2.53e-5*Math.pow(m,3)-5.51e-3*Math.pow(m,2)-9.086e-2*m+99.95;
	actin[5]=-2.95e-8*Math.pow(m,4)+2.32e-5*Math.pow(m,3)-5.55e-3*Math.pow(m,2)+4.49e-2*m+99.3;
	actin[6]=-1.493e-8*Math.pow(m,4)+1.413e-5*Math.pow(m,3)-4.095e-3*Math.pow(m,2)+6.365e-2*m+99.7;
	prcremain=actin[setdata.insulin_action_type]/100.0; //calc percent remaining based on insulin duration from settings
	total=total+hisdata[i].amount*prcremain; //total remaining insulin
	fcor=0.0;
	//bolus wizard always seems to be the record before the bolus.  If this is not true then we will need to look thru all the records with a timestamp to calc iob.  total active insulin wont be affected,continue to take more data
	if (hisdata[i-1]._type=="BolusWizard") fcor=hisdata[i-1].food_estimate;
	//console.log((hisdata[i].amount-fcor)*prcremain);
	inonb=inonb+(hisdata[i].amount-fcor)*prcremain; //classic iob calc stripping out insulin covering carbs
	
	
	} //end if bolus record
	} //loop thru all records
	return [inonb,total];  //return both
}

	

//console.log("hiken");
//var d=new Date(Date.parse("2014-11-14T10:14:25"));
//console.log(d);
//var n=d.getTime();
//console.log(n);


var Mydata= ' ';
pumptime=" ";

insulinremaining=" ";
$(document).ajaxStart($.blockUI).ajaxStop($.unblockUI);
$(document).ready(function(){

$(document).ajaxStart(function(){
    $("#wait").css("display","block");
  });
  $(document).ajaxComplete(function(){
    $("#wait").css("display","none");

  });  






$("button").click(function(){

    $.get("cgi-bin/his.sh",function(Mydata,status){
      //alert(Mydata)
	console.log(Mydata);


//parse results from mm-latest script
//string = string.replace(/[^a-zA-Z0-9]/g, '');
var pumptimej = Mydata.split('\n')[4];
var pumptimej2=pumptimej.replace("\'","\"");
var pumptime=pumptimej2.replace("\'","\"");


//use of eval dangerous on the web - need to parse JSON directly***
//status info
var firstLine = Mydata.split('\n')[5];
var junk=firstLine.toLowerCase();
var statusobj = eval('(' + junk + ')');
//temp basal 
 firstLine = Mydata.split('\n')[6];
 junk=firstLine.toLowerCase();
var tempbasalobj = eval('(' + junk + ')');
//basal pattern
firstline=Mydata.split('\n')[7];
var basalobj=eval('(' + firstline + ')');

//find current default basal rate
//convert pumptime to 2 digits per - it is not a datestring or JSON 0's are missing
//split after T but strip errant " first
pumptime = pumptime.substring(0, pumptime.length - 1);
var ptarray = pumptime.split("T");
//now grab pieces, 0 is hours, 1 is min, and 2 is sec
var ptime=ptarray[1].split(":");
//add leading 0's if they are not there
var hk=ptime[0];
var mk=ptime[1];
var sk=ptime[2];
if (hk.length==1) {hk="0"+hk;}

if (mk==1) {mk="0"+mk;}

if (sk.length==1) {sk="0"+sk}

var pto=hk+":"+mk+":"+sk;
 


//pto = pumptime.substring(pumptime.indexOf("T") +1);
//pto=pto.substr(0, pto.length-1);
console.log(pto+"ptolength"+pto.length);
//if (pto.length=7) pto="0"+pto; //if only 7 we are missing a 0

n=Object.keys(basalobj).length;


found=-1;
console.log("before");
i=0;
while(i<n-1) {
if (pto>=basalobj[i].start && pto<=basalobj[i+1].start) found=i;
i++;
}
if (found==-1) found=0; //this means it must be last record

if (found>1&&found<(n-1))  {
curbasalrate=basalobj[found-1].rate;
curbasalend=basalobj[found+1].start;
nextbasalrate=basalobj[found].rate;
nextbasalend=basalobj[found+2].start;} 
else if (found=0) {
curbasalrate=basalobj[0].rate;
curbasalend=basalobj[2].start;
nextbasalrate=basalobj[1].rate;
nextbasalend=basalobj[3].start;
}
else //found=n-1
{
curbasalrate=basalobj[n-1].rate;
curbasalend=basalobj[0].start;
nextbasalrate=basalobj[1].rate;
nextbasalend=basalobj[2].start;
}



var insulinremaining=Mydata.split('\n')[8];
 junk=Mydata.split('\n')[11];
var historyobj=eval('('+junk+')');
firstLine=Mydata.split('\n')[3];
junk=firstLine.toLowerCase();
var settingsobj=eval('(' + junk + ')');

//find bolus history in range




var ai = [0.0,0.0];
ai =iob(historyobj,settingsobj,pumptime);
actintot=ai[1]; //total active insulin
actincor=ai[0]; //total active insulin minus insulin used to cover carbs 
actincarb=actintot-actincor; //calc act insulin from carbs

console.log("active totals");
console.log(actintot);

//console.log(junk.status,junk.bolusing,junk.suspended);
//starttable
//$('#my-final-table').dynatable({dataset: {records: obj}});
//end table

//update time and status
document.getElementById('pumptime').innerHTML = pumptime;
 document.getElementById('status').innerHTML = statusobj.status;
document.getElementById('bolusing').innerHTML = statusobj.bolusing;
document.getElementById('suspended').innerHTML = statusobj.suspended;
//update current temp basal state
document.getElementById('insulinremaining').innerHTML = insulinremaining;
document.getElementById('duration').innerHTML = tempbasalobj.duration;
document.getElementById('rate').innerHTML = tempbasalobj.rate;
//update active insulin 
document.getElementById('idactin').innerHTML = actintot.toFixed(2);
document.getElementById('idactincor').innerHTML = actincor.toFixed(2);
document.getElementById('idactincarb').innerHTML = actincarb.toFixed(2);
//basal rates
document.getElementById('idcurbasalrate').innerHTML = curbasalrate.toFixed(2);
document.getElementById('idcurbasalend').innerHTML = curbasalend;
document.getElementById('idnextbasalrate').innerHTML = nextbasalrate.toFixed(2);
document.getElementById('idnextbasalend').innerHTML = nextbasalend;






//$("div#content").replaceWith(obj.status) 
    });

/* create variables from Mydata */





  });
});



</script>




 </head>
<body>

<button width=80%;>Query Pump</button> <p>





<div id="qdate" style="text-align:center;">  <label id="pumptime">  </label> 
<div id="wait" style="display:none;width:69px;height:89px;border:0px solid black;position:absolute;top:50%;left:40%;padding:0px;"><img src='ajax-loader.gif' width="64" height="64" /><br></div>



<table class="tftable" border="1" align="center" data-filter="#filter">
<caption>Live Pump Data</caption>
<tr><th align="center">Pump Status</th><th align="center">Bolus Status</th><th align="center">Suspend Status</th></tr>
<tr><td align="center" id="status"></td><td align="center" id="bolusing"></td><td align="center" id="suspended"></td></tr>
</table>

<table class="tftable" border="1" align="center">
<tr><th align="center">Reservoir Insulin (U)</th><th>Temp Basal Rate (U/min)</th><th align="center">Temp Basal Duration (min)</th></tr>
<tr><td id="insulinremaining"> </td></td><td id="rate"></td><td id="duration"></tr>
</table> 

<table class="tftable" border="1" align="center">
<tr><th align="center">Total Active Insulin (U)</th><th align="center">Active Insulin-Correction (U)</th><th>Active Insulin-Carbs (U) </th></tr>
<tr><td id="idactin"> </td><td id="idactincor"></td><td id="idactincarb"></td></tr>
</table>

<table class="tftable2" border="1" align="center">
<caption>Default Basal Rates</caption>
<tr><th align="center">Current Basal Rate (U/hr)</th><th align="center">Ending At</th><th>Next Basal Rate (U/hr)</th><th>Ending At </th></tr>
<tr  align="center"><td id="idcurbasalrate"> </td><td id="idcurbasalend"></td><td id="idnextbasalrate"></td><td id="idnextbasalend"></td></tr>
</table>

        
 </body>
</html>



</body>
</html> 
